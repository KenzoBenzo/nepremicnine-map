enum HouseType {
  detached
  duplex
  triplex
  multiplex
}

enum AppartmentType {
  studio
  condominium
  multiroom
}

enum PlotType {
  construction
  agricultural
  farm
  investment
}

enum Transaction {
  BUY
  RENT
}

type Agent @model {
  id: ID!
  name: String!
  email: String
  phoneNumber: String
  headshot: String
  agency: Agency
}

type Agency @model {
  id: ID!
  name: String
  website: String
  logo: String
  agents: [Agent]!
  street: String
  city: String!
  postalCode: Int
  phoneNumber: String
}

type Location @model {
  id: ID!
  street: String
  city: String!
  postalCode: Int
  municipality: String
  neighborhood: String
  longitude: Float!
  latitude: Float!
}

type House @model {
  id: ID!
  "English title field that summarizes the property."
  title: String! @unique
  "Slovenian title field that summarizes the property."
  naslov: String! @unique
  "English description field that describes the property."
  description: String
  "Slovenian description field that describes the property."
  opis: String
  "Where was this listing originally published?"
  referenceLink: String
  transaction: Transaction!
  sold: Boolean
  images: [String]
  totalPrice: Float!
  pricePerMeterSq: Float
  location: Location!
  agent: Agent
  type: HouseType!
  yearOfBuild: Int
  yearOfRenovation: Int
  plotSize: Int
  floorSize: Int
  bedRooms: Int
  bathRooms: Float
}

type Appartment @model {
  id: ID!
  "English title field that summarizes the property."
  title: String! @unique
  "Slovenian title field that summarizes the property."
  naslov: String! @unique
  "English description field that describes the property."
  description: String
  "Slovenian description field that describes the property."
  opis: String
  "Where was this listing originally published?"
  referenceLink: String
  transaction: Transaction!
  sold: Boolean
  images: [String]
  totalPrice: Float!
  pricePerMeterSq: Float
  location: Location!
  agent: Agent
  type: AppartmentType!
  yearOfBuild: Int
  yearOfRenovation: Int
  parking: Boolean
  floorSize: Int
  bedRooms: Int
  bathRooms: Float
}

type Plot @model {
  id: ID!
  "English title field that summarizes the property."
  title: String! @unique
  "Slovenian title field that summarizes the property."
  naslov: String! @unique
  "English description field that describes the property."
  description: String
  "Slovenian description field that describes the property."
  opis: String
  "Where was this listing originally published?"
  referenceLink: String
  transaction: Transaction!
  sold: Boolean
  images: [String]
  totalPrice: Float!
  pricePerMeterSq: Float
  location: Location!
  agent: Agent
  type: PlotType!
  plotSize: Int
  locationInformation: String
}

type Query {
  houses: [House]
  appartments: [Appartment]
  plots: [Plot]
  agencies: [Agency]
}
